{"ast":null,"code":"var _jsxFileName = \"/home/king/Development/phase-2/react/code-challenges/battlebot/src/Components/BotCollection.js\",\n  _s = $RefreshSig$();\n// import React, {useState, useEffect} from \"react\";\n\n// const botsAvailable = 'https://vercel1-smoky.vercel.app/bots'\n\n// function BotCollection() {\n\n//     const [bots, setBots] = useState([])\n\n//     useEffect(() => {\n//       fetch (botsAvailable)\n//         .then(response => response.json())\n//         .then(data => setBots(data))\n//     }, [])\n\n//     return (\n//       <div className=\"bot-collection\" >\n//         {bots.map(bot => (\n//           <div className=\"bot-card\"\n//           key={bot.id}>\n//             <h2>{bot.name}</h2>\n//             <img src={bot.avatar_url}/> \n//             <p>{bot.health}</p>\n//             <p>{bot.armor}</p>\n//             <p>{bot.bot_class}</p>\n//             {/* <p>{bot.created_at}</p>\n//             <p>{bot.updated_at}</p>  */}\n//             </div>\n//         ))}\n//       </div>\n//     );\n//   }\n\n//   export default BotCollection;\n\nimport React, { useState, useEffect } from 'react';\nimport YourBotArmy from './YourBotArmy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotCollection() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/bots').then(response => response.json()).then(data => setBots(data.map(bot => ({\n      ...bot,\n      selected: false\n    }))));\n  }, []);\n  const handleClick = bot => {\n    if (!bot.selected) {\n      setEnlistedBots([...enlistedBots, bot]);\n      setBots(bots.map(b => b.id === bot.id ? {\n        ...b,\n        selected: true\n      } : b));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-collection\",\n      children: bots.map(bot => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-card\",\n        onClick: () => handleClick(bot),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: bot.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: bot.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, bot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n      enlistedBots: enlistedBots\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(BotCollection, \"mePyinjWmuGOqgLLJcRecJpTmIw=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useState","useEffect","YourBotArmy","BotCollection","bots","setBots","enlistedBots","setEnlistedBots","fetch","then","response","json","data","map","bot","selected","handleClick","b","id","name","description"],"sources":["/home/king/Development/phase-2/react/code-challenges/battlebot/src/Components/BotCollection.js"],"sourcesContent":["// import React, {useState, useEffect} from \"react\";\n\n\n// const botsAvailable = 'https://vercel1-smoky.vercel.app/bots'\n \n\n\n// function BotCollection() {\n    \n//     const [bots, setBots] = useState([])\n  \n//     useEffect(() => {\n//       fetch (botsAvailable)\n//         .then(response => response.json())\n//         .then(data => setBots(data))\n//     }, [])\n  \n//     return (\n//       <div className=\"bot-collection\" >\n//         {bots.map(bot => (\n//           <div className=\"bot-card\"\n//           key={bot.id}>\n//             <h2>{bot.name}</h2>\n//             <img src={bot.avatar_url}/> \n//             <p>{bot.health}</p>\n//             <p>{bot.armor}</p>\n//             <p>{bot.bot_class}</p>\n//             {/* <p>{bot.created_at}</p>\n//             <p>{bot.updated_at}</p>  */}\n//             </div>\n//         ))}\n//       </div>\n//     );\n//   }\n  \n//   export default BotCollection;\n \n\nimport React, { useState, useEffect } from 'react';\nimport YourBotArmy from './YourBotArmy';\n\nfunction BotCollection() {\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:3000/bots')\n      .then(response => response.json())\n      .then(data => setBots(data.map(bot => ({...bot, selected: false}))))\n  }, []);\n\n  const handleClick = (bot) => {\n    if (!bot.selected) {\n      setEnlistedBots([...enlistedBots, bot]);\n      setBots(bots.map(b => b.id === bot.id ? {...b, selected: true} : b));\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"bot-collection\">\n        {bots.map(bot => (\n          <div className=\"bot-card\" key={bot.id} onClick={() => handleClick(bot)}>\n            <h2>{bot.name}</h2>\n            <p>{bot.description}</p>\n          </div>\n        ))}\n      </div>\n      <YourBotArmy enlistedBots={enlistedBots} />\n    </div>\n  );\n}\n\nexport default BotCollection;\n"],"mappings":";;AAAA;;AAGA;;AAIA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,SAASC,aAAa,GAAG;EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,OAAO,CAACO,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;MAAC,GAAGA,GAAG;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAIF,GAAG,IAAK;IAC3B,IAAI,CAACA,GAAG,CAACC,QAAQ,EAAE;MACjBR,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEQ,GAAG,CAAC,CAAC;MACvCT,OAAO,CAACD,IAAI,CAACS,GAAG,CAACI,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,GAAG,CAACI,EAAE,GAAG;QAAC,GAAGD,CAAC;QAAEF,QAAQ,EAAE;MAAI,CAAC,GAAGE,CAAC,CAAC,CAAC;IACtE;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,gBAAgB;MAAA,UAC5Bb,IAAI,CAACS,GAAG,CAACC,GAAG,iBACX;QAAK,SAAS,EAAC,UAAU;QAAc,OAAO,EAAE,MAAME,WAAW,CAACF,GAAG,CAAE;QAAA,wBACrE;UAAA,UAAKA,GAAG,CAACK;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM,eACnB;UAAA,UAAIL,GAAG,CAACM;QAAW;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA,GAFKN,GAAG,CAACI,EAAE;QAAA;QAAA;QAAA;MAAA,QAItC;IAAC;MAAA;MAAA;MAAA;IAAA,QACE,eACN,QAAC,WAAW;MAAC,YAAY,EAAEZ;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACvC;AAEV;AAAC,GA9BQH,aAAa;AAAA,KAAbA,aAAa;AAgCtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}