{"ast":null,"code":"var _jsxFileName = \"/home/king/Development/phase-2/react/code-challenges/battlebot/src/Components/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./Yourbot\";\nimport BotsPage from \"./BotsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botsAvailable = 'http://localhost:3000/bots';\nfunction BotCollection() {\n  _s();\n  const [bots, setBots] = useState([]);\n  useEffect(() => {\n    fetch(botsAvailable).then(response => response.json()).then(data => setBots(data));\n  }, []);\n  function enlistBot(id) {\n    setBots(bots.map(bot => id === bot.id ? {\n      ...bot,\n      isEnlisted: true\n    } : bot));\n  }\n  function delistBot(id) {\n    setBots(bots.map(bot => id === bot.id ? {\n      ...bot,\n      isEnlisted: false\n    } : bot));\n  }\n  function dischargeBot(id) {\n    setBots(bots.filter(bot => bot.id === id ? false : true));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bot-collection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-card\",\n      children: /*#__PURE__*/_jsxDEV(YourBotArmy, {\n        bots: bots.filter(bot => bot.isEnlisted),\n        handleDischarge: dischargeBot,\n        handleClick: delistBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotsPage, {\n      bots: bots,\n      handleDischarge: dischargeBot,\n      handleClick: enlistBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(BotCollection, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useState","useEffect","YourBotArmy","BotsPage","botsAvailable","BotCollection","bots","setBots","fetch","then","response","json","data","enlistBot","id","map","bot","isEnlisted","delistBot","dischargeBot","filter"],"sources":["/home/king/Development/phase-2/react/code-challenges/battlebot/src/Components/BotCollection.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./Yourbot\";\nimport BotsPage from \"./BotsPage\";\n\n\nconst botsAvailable = 'http://localhost:3000/bots'\n\n\n\nfunction BotCollection() {\n\n  const [bots, setBots] = useState([])\n\n\n  useEffect(() => {\n    fetch(botsAvailable)\n      .then(response => response.json())\n      .then(data => setBots(data))\n  }, [])\n\n\n\n  function enlistBot(id) {\n    setBots(bots.map(bot => id === bot.id ? {...bot, isEnlisted: true} : bot));\n  }\n  \n\n  function delistBot(id) {\n    setBots(bots.map(bot => id === bot.id ? {...bot, isEnlisted: false} : bot));\n  }\n  \n  function dischargeBot(id) {\n    setBots(bots.filter(bot => bot.id === id ? false : true));\n  }\n\n  return (\n    <div className=\"bot-collection\" >\n      <div className=\"bot-card\">\n      <YourBotArmy bots={bots.filter(bot => bot.isEnlisted)} handleDischarge={dischargeBot} handleClick={delistBot} />\n      </div>\n      <div className=\"bot-card\"></div>\n      <BotsPage bots= {bots}  handleDischarge={dischargeBot} handleClick={enlistBot}/>\n      </div>\n  )\n}\n\nexport default BotCollection;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,WAAW;AACnC,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAGlC,MAAMC,aAAa,GAAG,4BAA4B;AAIlD,SAASC,aAAa,GAAG;EAAA;EAEvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAGpCC,SAAS,CAAC,MAAM;IACdO,KAAK,CAACJ,aAAa,CAAC,CACjBK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,OAAO,CAACK,IAAI,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAIN,SAASC,SAAS,CAACC,EAAE,EAAE;IACrBP,OAAO,CAACD,IAAI,CAACS,GAAG,CAACC,GAAG,IAAIF,EAAE,KAAKE,GAAG,CAACF,EAAE,GAAG;MAAC,GAAGE,GAAG;MAAEC,UAAU,EAAE;IAAI,CAAC,GAAGD,GAAG,CAAC,CAAC;EAC5E;EAGA,SAASE,SAAS,CAACJ,EAAE,EAAE;IACrBP,OAAO,CAACD,IAAI,CAACS,GAAG,CAACC,GAAG,IAAIF,EAAE,KAAKE,GAAG,CAACF,EAAE,GAAG;MAAC,GAAGE,GAAG;MAAEC,UAAU,EAAE;IAAK,CAAC,GAAGD,GAAG,CAAC,CAAC;EAC7E;EAEA,SAASG,YAAY,CAACL,EAAE,EAAE;IACxBP,OAAO,CAACD,IAAI,CAACc,MAAM,CAACJ,GAAG,IAAIA,GAAG,CAACF,EAAE,KAAKA,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;EAC3D;EAEA,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAC7B;MAAK,SAAS,EAAC,UAAU;MAAA,uBACzB,QAAC,WAAW;QAAC,IAAI,EAAER,IAAI,CAACc,MAAM,CAACJ,GAAG,IAAIA,GAAG,CAACC,UAAU,CAAE;QAAC,eAAe,EAAEE,YAAa;QAAC,WAAW,EAAED;MAAU;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC1G,eACN;MAAK,SAAS,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAO,eAChC,QAAC,QAAQ;MAAC,IAAI,EAAGZ,IAAK;MAAE,eAAe,EAAEa,YAAa;MAAC,WAAW,EAAEN;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1E;AAEZ;AAAC,GAnCQR,aAAa;AAAA,KAAbA,aAAa;AAqCtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}