{"ast":null,"code":"var _jsxFileName = \"/home/king/Development/phase-2/react/code-challenges/battlebot/src/Components/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./Yourbot\";\nimport BotsPage from \"./BotsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botsAvailable = 'http://localhost:3000/bots';\nfunction BotCollection() {\n  _s();\n  const [bots, setBots] = useState([]);\n  useEffect(() => {\n    fetch(botsAvailable).then(response => response.json()).then(data => setBots(data));\n  }, []);\n  const DeleteBot = bot => {\n    fetch(`botsAvailable/${bot.id}`, {\n      method: \"DELETE\",\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(result => {\n      result.json().then(resp => {\n        console.warn(resp);\n      });\n    });\n  };\n  function enlistBot(id) {\n    setBots(bots.map(bot => id === bot.id ? {\n      ...bot,\n      isEnlisted: true\n    } : bot));\n  }\n  function delistBot(id) {\n    setBots(bots.map(bot => id === bot.id ? {\n      ...bot,\n      isEnlisted: false\n    } : bot));\n  }\n  function dischargeBot(id) {\n    setBots(bots.filter(bot => bot.id === id ? false : true));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bot-collection\",\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: bots.filter(bot => bot.isEnlisted),\n      handleDischarge: dischargeBot,\n      handleClick: delistBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotsPage, {\n      BotArr: bots,\n      handleDisplay: display,\n      DeleteBot: DeleteBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(BotCollection, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useState","useEffect","YourBotArmy","BotsPage","botsAvailable","BotCollection","bots","setBots","fetch","then","response","json","data","DeleteBot","bot","id","method","header","result","resp","console","warn","enlistBot","map","isEnlisted","delistBot","dischargeBot","filter","display"],"sources":["/home/king/Development/phase-2/react/code-challenges/battlebot/src/Components/BotCollection.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./Yourbot\";\nimport BotsPage from \"./BotsPage\";\n\n\nconst botsAvailable = 'http://localhost:3000/bots'\n\n\n\nfunction BotCollection() {\n\n  const [bots, setBots] = useState([])\n\n\n  useEffect(() => {\n    fetch(botsAvailable)\n      .then(response => response.json())\n      .then(data => setBots(data))\n  }, [])\n\n  const DeleteBot = (bot) => {\n    fetch(`botsAvailable/${bot.id}`, {\n      method: \"DELETE\",\n      header: { \"Content-Type\": \"application/json\" }\n    }).then((result) => {\n      result.json().then((resp) => {\n        console.warn(resp)\n      })\n    });\n  }\n\n  function enlistBot(id) {\n    setBots(bots.map(bot => id === bot.id ? {...bot, isEnlisted: true} : bot));\n  }\n  \n\n  function delistBot(id) {\n    setBots(bots.map(bot => id === bot.id ? {...bot, isEnlisted: false} : bot));\n  }\n  \n  function dischargeBot(id) {\n    setBots(bots.filter(bot => bot.id === id ? false : true));\n  }\n\n  return (\n    <div className=\"bot-collection\" >\n      <YourBotArmy bots={bots.filter(bot => bot.isEnlisted)} handleDischarge={dischargeBot} handleClick={delistBot} />\n      <BotsPage BotArr={bots} handleDisplay={display} DeleteBot={DeleteBot} />\n    </div>\n  )\n}\n\nexport default BotCollection;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,WAAW;AACnC,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAGlC,MAAMC,aAAa,GAAG,4BAA4B;AAIlD,SAASC,aAAa,GAAG;EAAA;EAEvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAGpCC,SAAS,CAAC,MAAM;IACdO,KAAK,CAACJ,aAAa,CAAC,CACjBK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,OAAO,CAACK,IAAI,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,SAAS,GAAIC,GAAG,IAAK;IACzBN,KAAK,CAAE,iBAAgBM,GAAG,CAACC,EAAG,EAAC,EAAE;MAC/BC,MAAM,EAAE,QAAQ;MAChBC,MAAM,EAAE;QAAE,cAAc,EAAE;MAAmB;IAC/C,CAAC,CAAC,CAACR,IAAI,CAAES,MAAM,IAAK;MAClBA,MAAM,CAACP,IAAI,EAAE,CAACF,IAAI,CAAEU,IAAI,IAAK;QAC3BC,OAAO,CAACC,IAAI,CAACF,IAAI,CAAC;MACpB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED,SAASG,SAAS,CAACP,EAAE,EAAE;IACrBR,OAAO,CAACD,IAAI,CAACiB,GAAG,CAACT,GAAG,IAAIC,EAAE,KAAKD,GAAG,CAACC,EAAE,GAAG;MAAC,GAAGD,GAAG;MAAEU,UAAU,EAAE;IAAI,CAAC,GAAGV,GAAG,CAAC,CAAC;EAC5E;EAGA,SAASW,SAAS,CAACV,EAAE,EAAE;IACrBR,OAAO,CAACD,IAAI,CAACiB,GAAG,CAACT,GAAG,IAAIC,EAAE,KAAKD,GAAG,CAACC,EAAE,GAAG;MAAC,GAAGD,GAAG;MAAEU,UAAU,EAAE;IAAK,CAAC,GAAGV,GAAG,CAAC,CAAC;EAC7E;EAEA,SAASY,YAAY,CAACX,EAAE,EAAE;IACxBR,OAAO,CAACD,IAAI,CAACqB,MAAM,CAACb,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKA,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;EAC3D;EAEA,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAC7B,QAAC,WAAW;MAAC,IAAI,EAAET,IAAI,CAACqB,MAAM,CAACb,GAAG,IAAIA,GAAG,CAACU,UAAU,CAAE;MAAC,eAAe,EAAEE,YAAa;MAAC,WAAW,EAAED;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eAChH,QAAC,QAAQ;MAAC,MAAM,EAAEnB,IAAK;MAAC,aAAa,EAAEsB,OAAQ;MAAC,SAAS,EAAEf;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACpE;AAEV;AAAC,GAzCQR,aAAa;AAAA,KAAbA,aAAa;AA2CtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}